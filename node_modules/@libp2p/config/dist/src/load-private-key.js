import { generateKeyPair } from '@libp2p/crypto/keys';
import { keychain } from '@libp2p/keychain';
import { defaultLogger } from '@libp2p/logger';
import { Key } from 'interface-datastore';
export async function loadOrCreateSelfKey(datastore, init = {}) {
    const chain = keychain(init)({
        datastore,
        logger: defaultLogger()
    });
    const selfKey = new Key('/pkcs8/self');
    let privateKey;
    if (await datastore.has(selfKey)) {
        privateKey = await chain.exportKey('self');
    }
    else {
        privateKey = await generateKeyPair(init.keyType ?? 'Ed25519');
        // persist the peer id in the keychain for next time
        await chain.importKey('self', privateKey);
    }
    return privateKey;
}
//# sourceMappingURL=load-private-key.js.map