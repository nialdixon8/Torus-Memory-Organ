(function (root, factory) {(typeof module === 'object' && module.exports) ? module.exports = factory() : root.Libp2PPing = factory()}(typeof self !== 'undefined' ? self : this, function () {
"use strict";var Libp2PPing=(()=>{var S=Object.defineProperty;var W=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var H=Object.prototype.hasOwnProperty;var K=(o,t)=>{for(var e in t)S(o,e,{get:t[e],enumerable:!0})},z=(o,t,e,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of $(t))!H.call(o,n)&&n!==e&&S(o,n,{get:()=>t[n],enumerable:!(r=W(t,n))||r.enumerable});return o};var J=o=>z(S({},"__esModule",{value:!0}),o);var et={};K(et,{PING_PROTOCOL:()=>j,ping:()=>tt});var g=class extends Error{static name="InvalidParametersError";constructor(t="Invalid parameters"){super(t),this.name="InvalidParametersError"}};var y=class extends Error{static name="ProtocolError";constructor(t="Protocol error"){super(t),this.name="ProtocolError"}},x=class extends Error{static name="TimeoutError";constructor(t="Timed out"){super(t),this.name="TimeoutError"}};var I=(o,...t)=>{try{[...t]}catch{}};function E(o,t){if(o===t)return!0;if(o.byteLength!==t.byteLength)return!1;for(let e=0;e<o.byteLength;e++)if(o[e]!==t[e])return!1;return!0}var m=typeof globalThis=="object"&&"crypto"in globalThis?globalThis.crypto:void 0;function M(o=32){if(m&&typeof m.getRandomValues=="function")return m.getRandomValues(new Uint8Array(o));if(m&&typeof m.randomBytes=="function")return m.randomBytes(o);throw new Error("crypto.getRandomValues must be defined")}function p(o=0){return new Uint8Array(o)}function b(o=0){return new Uint8Array(o)}function L(o){if(isNaN(o)||o<=0)throw new g("random bytes length must be a Number bigger than 0");return M(o)}function T(o,t){t==null&&(t=o.reduce((n,a)=>n+a.length,0));let e=b(t),r=0;for(let n of o)e.set(n,r),r+=n.length;return e}function d(){let o={};return o.promise=new Promise((t,e)=>{o.resolve=t,o.reject=e}),o}var O=class extends Error{type;code;constructor(t,e,r){super(t??"The operation was aborted"),this.type="aborted",this.name=r??"AbortError",this.code=e??"ABORT_ERR"}};async function _(o,t,e){if(t==null)return o;if(t.aborted)return Promise.reject(new O(e?.errorMessage,e?.errorCode,e?.errorName));let r,n=new O(e?.errorMessage,e?.errorCode,e?.errorName);try{return await Promise.race([o,new Promise((a,s)=>{r=()=>{s(n)},t.addEventListener("abort",r)})])}finally{r!=null&&t.removeEventListener("abort",r)}}var P=class{readNext;haveNext;ended;nextResult;constructor(){this.ended=!1,this.readNext=d(),this.haveNext=d()}[Symbol.asyncIterator](){return this}async next(){if(this.nextResult==null&&await this.haveNext.promise,this.nextResult==null)throw new Error("HaveNext promise resolved but nextResult was undefined");let t=this.nextResult;return this.nextResult=void 0,this.readNext.resolve(),this.readNext=d(),t}async throw(t){return this.ended=!0,t!=null&&(this.haveNext.promise.catch(()=>{}),this.haveNext.reject(t)),{done:!0,value:void 0}}async return(){let t={done:!0,value:void 0};return await this._push(void 0),t}async push(t,e){await this._push(t,e)}async end(t,e){t!=null?await this.throw(t):await this._push(void 0,e)}async _push(t,e){if(t!=null&&this.ended)throw new Error("Cannot push value onto an ended pushable");for(;this.nextResult!=null;)await this.readNext.promise;t!=null?this.nextResult={done:!1,value:t}:(this.ended=!0,this.nextResult={done:!0,value:void 0}),this.haveNext.resolve(),this.haveNext=d(),await _(this.readNext.promise,e?.signal,e)}};function V(){return new P}var F=Symbol.for("@achingbrain/uint8arraylist");function k(o,t){if(t==null||t<0)throw new RangeError("index is out of bounds");let e=0;for(let r of o){let n=e+r.byteLength;if(t<n)return{buf:r,index:t-e};e=n}throw new RangeError("index is out of bounds")}function U(o){return!!o?.[F]}var w=class o{bufs;length;[F]=!0;constructor(...t){this.bufs=[],this.length=0,t.length>0&&this.appendAll(t)}*[Symbol.iterator](){yield*this.bufs}get byteLength(){return this.length}append(...t){this.appendAll(t)}appendAll(t){let e=0;for(let r of t)if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.push(r);else if(U(r))e+=r.byteLength,this.bufs.push(...r.bufs);else throw new Error("Could not append value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}prepend(...t){this.prependAll(t)}prependAll(t){let e=0;for(let r of t.reverse())if(r instanceof Uint8Array)e+=r.byteLength,this.bufs.unshift(r);else if(U(r))e+=r.byteLength,this.bufs.unshift(...r.bufs);else throw new Error("Could not prepend value, must be an Uint8Array or a Uint8ArrayList");this.length+=e}get(t){let e=k(this.bufs,t);return e.buf[e.index]}set(t,e){let r=k(this.bufs,t);r.buf[r.index]=e}write(t,e=0){if(t instanceof Uint8Array)for(let r=0;r<t.length;r++)this.set(e+r,t[r]);else if(U(t))for(let r=0;r<t.length;r++)this.set(e+r,t.get(r));else throw new Error("Could not write value, must be an Uint8Array or a Uint8ArrayList")}consume(t){if(t=Math.trunc(t),!(Number.isNaN(t)||t<=0)){if(t===this.byteLength){this.bufs=[],this.length=0;return}for(;this.bufs.length>0;)if(t>=this.bufs[0].byteLength)t-=this.bufs[0].byteLength,this.length-=this.bufs[0].byteLength,this.bufs.shift();else{this.bufs[0]=this.bufs[0].subarray(t),this.length-=t;break}}}slice(t,e){let{bufs:r,length:n}=this._subList(t,e);return T(r,n)}subarray(t,e){let{bufs:r,length:n}=this._subList(t,e);return r.length===1?r[0]:T(r,n)}sublist(t,e){let{bufs:r,length:n}=this._subList(t,e),a=new o;return a.length=n,a.bufs=[...r],a}_subList(t,e){if(t=t??0,e=e??this.length,t<0&&(t=this.length+t),e<0&&(e=this.length+e),t<0||e>this.length)throw new RangeError("index is out of bounds");if(t===e)return{bufs:[],length:0};if(t===0&&e===this.length)return{bufs:this.bufs,length:this.length};let r=[],n=0;for(let a=0;a<this.bufs.length;a++){let s=this.bufs[a],i=n,c=i+s.byteLength;if(n=c,t>=c)continue;let f=t>=i&&t<c,l=e>i&&e<=c;if(f&&l){if(t===i&&e===c){r.push(s);break}let u=t-i;r.push(s.subarray(u,u+(e-t)));break}if(f){if(t===0){r.push(s);continue}r.push(s.subarray(t-i));continue}if(l){if(e===c){r.push(s);break}r.push(s.subarray(0,e-i));break}r.push(s)}return{bufs:r,length:e-t}}indexOf(t,e=0){if(!U(t)&&!(t instanceof Uint8Array))throw new TypeError('The "value" argument must be a Uint8ArrayList or Uint8Array');let r=t instanceof Uint8Array?t:t.subarray();if(e=Number(e??0),isNaN(e)&&(e=0),e<0&&(e=this.length+e),e<0&&(e=0),t.length===0)return e>this.length?this.length:e;let n=r.byteLength;if(n===0)throw new TypeError("search must be at least 1 byte long");let a=256,s=new Int32Array(a);for(let u=0;u<a;u++)s[u]=-1;for(let u=0;u<n;u++)s[r[u]]=u;let i=s,c=this.byteLength-r.byteLength,f=r.byteLength-1,l;for(let u=e;u<=c;u+=l){l=0;for(let h=f;h>=0;h--){let C=this.get(u+h);if(r[h]!==C){l=Math.max(1,h-i[C]);break}}if(l===0)return u}return-1}getInt8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getInt8(0)}setInt8(t,e){let r=b(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setInt8(0,e),this.write(r,t)}getInt16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt16(0,e)}setInt16(t,e,r){let n=p(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt16(0,e,r),this.write(n,t)}getInt32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getInt32(0,e)}setInt32(t,e,r){let n=p(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setInt32(0,e,r),this.write(n,t)}getBigInt64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigInt64(0,e)}setBigInt64(t,e,r){let n=p(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigInt64(0,e,r),this.write(n,t)}getUint8(t){let e=this.subarray(t,t+1);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint8(0)}setUint8(t,e){let r=b(1);new DataView(r.buffer,r.byteOffset,r.byteLength).setUint8(0,e),this.write(r,t)}getUint16(t,e){let r=this.subarray(t,t+2);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint16(0,e)}setUint16(t,e,r){let n=p(2);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint16(0,e,r),this.write(n,t)}getUint32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getUint32(0,e)}setUint32(t,e,r){let n=p(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setUint32(0,e,r),this.write(n,t)}getBigUint64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getBigUint64(0,e)}setBigUint64(t,e,r){let n=p(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setBigUint64(0,e,r),this.write(n,t)}getFloat32(t,e){let r=this.subarray(t,t+4);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat32(0,e)}setFloat32(t,e,r){let n=p(4);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat32(0,e,r),this.write(n,t)}getFloat64(t,e){let r=this.subarray(t,t+8);return new DataView(r.buffer,r.byteOffset,r.byteLength).getFloat64(0,e)}setFloat64(t,e,r){let n=p(8);new DataView(n.buffer,n.byteOffset,n.byteLength).setFloat64(0,e,r),this.write(n,t)}equals(t){if(t==null||!(t instanceof o)||t.bufs.length!==this.bufs.length)return!1;for(let e=0;e<this.bufs.length;e++)if(!E(this.bufs[e],t.bufs[e]))return!1;return!0}static fromUint8Arrays(t,e){let r=new o;return r.bufs=t,e==null&&(e=t.reduce((n,a)=>n+a.byteLength,0)),r.length=e,r}};var v=class extends Error{name="UnexpectedEOFError";code="ERR_UNEXPECTED_EOF"};var N=class extends Error{code;constructor(t,e){super(t),this.code=e}},R=class extends N{type;constructor(t){super(t,"ABORT_ERR"),this.type="aborted",this.name="AbortError"}};function D(o,t){let e=V();o.sink(e).catch(async s=>{await e.end(s)}),o.sink=async s=>{for await(let i of s)await e.push(i);await e.end()};let r=o.source;o.source[Symbol.iterator]!=null?r=o.source[Symbol.iterator]():o.source[Symbol.asyncIterator]!=null&&(r=o.source[Symbol.asyncIterator]());let n=new w;return{read:async(s,i)=>{i?.signal?.throwIfAborted();let c,f=new Promise((l,u)=>{c=()=>{u(new R("Read aborted"))},i?.signal?.addEventListener("abort",c)});try{if(s==null){let{done:u,value:h}=await Promise.race([r.next(),f]);return u===!0?new w:h}for(;n.byteLength<s;){let{value:u,done:h}=await Promise.race([r.next(),f]);if(h===!0)throw new v("unexpected end of input");n.append(u)}let l=n.sublist(0,s);return n.consume(s),l}finally{c!=null&&i?.signal?.removeEventListener("abort",c)}},write:async(s,i)=>{i?.signal?.throwIfAborted(),s instanceof Uint8Array?await e.push(s,i):await e.push(s.subarray(),i)},unwrap:()=>{if(n.byteLength>0){let s=o.source;o.source=async function*(){t?.yieldBytes===!1?yield n:yield*n,yield*s}()}return o}}}var j="/ipfs/ping/1.0.0";var X="1.0.0",q="ping",G="ipfs";var A=class{protocol;components;started;timeout;maxInboundStreams;maxOutboundStreams;runOnLimitedConnection;log;constructor(t,e={}){this.components=t,this.log=t.logger.forComponent("libp2p:ping"),this.started=!1,this.protocol=`/${e.protocolPrefix??G}/${q}/${X}`,this.timeout=e.timeout??1e4,this.maxInboundStreams=e.maxInboundStreams??2,this.maxOutboundStreams=e.maxOutboundStreams??1,this.runOnLimitedConnection=e.runOnLimitedConnection??!0,this.handleMessage=this.handleMessage.bind(this)}[Symbol.toStringTag]="@libp2p/ping";async start(){await this.components.registrar.handle(this.protocol,this.handleMessage,{maxInboundStreams:this.maxInboundStreams,maxOutboundStreams:this.maxOutboundStreams,runOnLimitedConnection:this.runOnLimitedConnection}),this.started=!0}async stop(){await this.components.registrar.unhandle(this.protocol),this.started=!1}isStarted(){return this.started}handleMessage(t){this.log("incoming ping from %p",t.connection.remotePeer);let{stream:e}=t,r=Date.now(),n=D(e),a=!1;Promise.resolve().then(async()=>{for(;;){let s=AbortSignal.timeout(this.timeout);I(1/0,s),s.addEventListener("abort",()=>{e?.abort(new x("ping timeout"))});let i=await n.read(32,{signal:s});await n.write(i,{signal:s}),a=!0}}).catch(s=>{a&&s.name==="UnexpectedEOFError"&&e.readStatus!=="ready"||(this.log.error("incoming ping from %p failed with error - %e",t.connection.remotePeer,s),e?.abort(s))}).finally(()=>{let s=Date.now()-r;this.log("incoming ping from %p complete in %dms",t.connection.remotePeer,s);let i=AbortSignal.timeout(this.timeout);I(1/0,i),e.close({signal:i}).catch(c=>{this.log.error("error closing ping stream from %p - %e",t.connection.remotePeer,c),e?.abort(c)})})}async ping(t,e={}){this.log("pinging %p",t);let r=Date.now(),n=L(32),a=await this.components.connectionManager.openConnection(t,e),s;if(e.signal==null){let i=AbortSignal.timeout(this.timeout);e={...e,signal:i}}try{s=await a.newStream(this.protocol,{...e,runOnLimitedConnection:this.runOnLimitedConnection});let i=D(s),[,c]=await Promise.all([i.write(n,e),i.read(32,e)]),f=Date.now()-r;if(!E(n,c.subarray()))throw new y(`Received wrong ping ack after ${f}ms`);return this.log("ping %p complete in %dms",a.remotePeer,f),f}catch(i){throw this.log.error("error while pinging %p",a.remotePeer,i),s?.abort(i),i}finally{s!=null&&await s.close(e)}}};function tt(o={}){return t=>new A(t,o)}return J(et);})();
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
return Libp2PPing}));
